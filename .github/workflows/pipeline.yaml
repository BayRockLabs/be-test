name: build and deploy to Azure Container App to c2c-demo in BRL Account
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Add .env file
        run: |
          echo "${{ secrets.DOT_ENV }}" | base64 --decode > c2c_service/.env
          ls -ltra 
          ls -ltra c2c_service/
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.C2C_DEMO_BRL_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.C2C_DEMO_BRL_REGISTRY_USERNAME }}
          password: ${{ secrets.C2C_DEMO_BRL_REGISTRY_PASSWORD }}
      - name: Build and tag Docker image
        working-directory: c2c_service
        run: >
          IMAGE_TAG=${{ steps.vars.outputs.sha_short }}

          docker build --build-arg AUTO_MIGRATE=${{ secrets.AUTO_MIGRATE }} -t ${{ secrets.C2C_DEMO_BRL_REGISTRY_LOGIN_SERVER }}/c2c-service:${IMAGE_TAG} .
      - name: Push Docker image
        working-directory: c2c_service
        run: >
          IMAGE_TAG=${{ steps.vars.outputs.sha_short }}

          docker push ${{ secrets.C2C_DEMO_BRL_REGISTRY_LOGIN_SERVER }}/c2c-service:${IMAGE_TAG}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          acrName: c2cacr
          containerAppName: c2c-service
          resourceGroup: c2c-demo
          imageToDeploy: c2cacr.azurecr.io/c2c-service:${{ steps.vars.outputs.sha_short }}