name: Create Azure PostgreSQL Database

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
  push:
    branches:
      - db-env-test

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: db-env-test

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform
        env:
          ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}

      - name: Terraform Apply or Destroy
        run: |
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            terraform apply -auto-approve
            terraform output -json > ../terraform_output.json
          else
            terraform destroy -auto-approve
          fi
        working-directory: terraform
        env:
          ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}

      - name: List root directory contents
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        run: ls -la

      - name: Install jq
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        run: sudo apt-get install -y jq

      - name: Parse and Set Outputs
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        id: parse_outputs
        run: |
          DB_HOSTNAME=$(jq -r '.DB_HOSTNAME.value' ../terraform_output.json)
          DB_USERNAME=$(jq -r '.DB_USERNAME.value' ../terraform_output.json)
          DB_PASSWORD=$(jq -r '.DB_PASSWORD.value' ../terraform_output.json)
          DB_NAME=$(jq -r '.DB_NAME.value' ../terraform_output.json)
          DB_PORT=$(jq -r '.DB_PORT.value' ../terraform_output.json)
          echo "::set-output name=db-hostname::$DB_HOSTNAME"
          echo "::set-output name=db-username::$DB_USERNAME"
          echo "::set-output name=db-password::$DB_PASSWORD"
          echo "::set-output name=db-name::$DB_NAME"
          echo "::set-output name=db-port::$DB_PORT"