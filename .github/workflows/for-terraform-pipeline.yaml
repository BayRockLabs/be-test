---
name: build and deploy to Azure Container App
on:
  push:
    branches:
      - aca
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Add .env file
        run: |
          echo "${{ secrets.ENV }}" > .env
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.C2C_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.C2C_REGISTRY_USERNAME }}
          password: ${{ secrets.C2C_REGISTRY_PASSWORD }}
      - name: Build and tag Docker image
        run: >
          IMAGE_TAG=${{ steps.vars.outputs.sha_short }}

          docker build  -t ${{ secrets.C2C_REGISTRY_LOGIN_SERVER }}/c2c-service:${IMAGE_TAG} .
      - name: Push Docker image
        run: >
          IMAGE_TAG=${{ steps.vars.outputs.sha_short }}

          docker push ${{ secrets.C2C_REGISTRY_LOGIN_SERVER }}/c2c-service:${IMAGE_TAG}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          acrName: mpsacr
          containerAppName: c2c-service
          resourceGroup: c2c-new-dev-test
          imageToDeploy: ${{ secrets.C2C_REGISTRY_LOGIN_SERVER }}/c2c-service:${{ steps.vars.outputs.sha_short }}
